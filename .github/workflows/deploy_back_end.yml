name: Backend

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID_API }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_API }}
  REPO_PATH: "./backend"

on:
  push:
    branches:
      - main
    # paths:
    #   - './backend/**'
    #   - 'deploy_back_end.yml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build 
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
 
      - name: Setup Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14'
 
      - name: Build
        run: |
          yarn install --frozen-lockfile
          npm run bundle

      # - name: Run Tests Against Vercel
      #   env:
      #     VERCEL_URL: ${{ steps.deploy-vercel-staging.outputs.preview-url }}
      #   run: npm run test
 
      - name: Deploy to Production
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}