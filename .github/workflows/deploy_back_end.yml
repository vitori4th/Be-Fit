name: Backend

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID_API }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_API }}

on:
  push:
    branches:
      - main
    # paths:
    #   - './backend/**'
    #   - 'deploy_back_end.yml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Install dependencies
        working-directory: ./backend
        run: npm install
      - name: Build project
        run: npm run build --if-present
        working-directory: ./backend
  Deploy-Production:
    runs-on: ubuntu-latest
    needs: build  # O job "Deploy-Production" depende do job "build"
    if: ${{ needs.build.outcome == 'success' }}  # Executar apenas se o job "build" tiver sucesso
    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        working-directory: ./backend
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        working-directory: ./backend
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        working-directory: ./backend
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts
        working-directory: ./backend
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}



